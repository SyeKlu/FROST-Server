{{- $tier := "http" -}}
{{- $fullName := include "frost-server.fullName" (merge (dict "tier" $tier) .) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    helm.sh/chart: {{ include "frost-server.chart" . }}
    app: {{ include "frost-server.name" . }}
    component: {{ $tier }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/managed-by: {{ .Release.Service }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app: {{ include "frost-server.name" . }}
      component: {{ $tier }}
  replicas: {{ .Values.frost.http.replicas }}
  template:
    metadata:
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        helm.sh/chart: {{ include "frost-server.chart" . }}
        app: {{ include "frost-server.name" . }}
        component: {{ $tier }}
    spec:
      containers:
        - name: {{ $fullName }}
          image: "{{ .Values.frost.http.image.registry }}/{{ .Values.frost.http.image.repository }}:{{ .Values.frost.http.image.tag }}"
          imagePullPolicy: {{ .Values.frost.http.image.pullPolicy | quote }}
          ports:
            - name: tomcat
              containerPort: 8080
          resources:
          {{- toYaml .Values.frost.http.resources | nindent 12 }}
          env:
            # Internal properties
            - name: ApiVersion
              value: {{ include "frost-server.http.apiVersion" . | quote }}
            - name: serviceRootUrl
              value: {{ include "frost-server.http.serviceRootUrl" . | quote }}
            - name: enableActuation
              value: "{{ .Values.frost.enableActuation }}"

            # HTTP related properties
            - name: defaultCount
              value: "{{ .Values.frost.http.defaultCount }}"
            - name: defaultTop
              value: "{{ .Values.frost.http.defaultTop }}"
            - name: maxTop
              value: "{{ .Values.frost.http.maxTop }}"
            - name: maxDataSize
              value: "{{ .Values.frost.http.maxDataSize | int64 }}"
            - name: useAbsoluteNavigationLinks
              value: "{{ .Values.frost.http.useAbsoluteNavigationLinks }}"
            - name: http_cors_enable
              value: "{{ .Values.frost.http.cors.enable }}"

            {{ if .Values.frost.http.cors.enable -}}
            # Cross-Origin Resource Sharing related properties
            - name: http_cors_allowed_headers
              value: "{{ .Values.frost.http.cors.allowed.headers }}"
            - name: http_cors_allowed_methods
              value: "{{ .Values.frost.http.cors.allowed.methods }}"
            - name: http_cors_allowed_origins
              value: "{{ .Values.frost.http.cors.allowed.origins }}"
            - name: http_cors_exposed_headers
              value: "{{ .Values.frost.http.cors.exposed.headers }}"
            - name: http_cors_preflight_maxage
              value: "{{ .Values.frost.http.cors.preflight.maxage }}"
            - name: http_cors_request_decorate
              value: "{{ .Values.frost.http.cors.request.decorate }}"
            - name: http_cors_support_credentials
              value: "{{ .Values.frost.http.cors.support.credentials }}"
            {{- end}}

            #Data Model Plugins

            #Core Model Plugin
            {{ if .Values.frost.plugins.coreModel.enabled -}}
            - name: plugins.coreModel.enable
              value: "{{ .Values.frost.plugins.coreModel.enabled }}"
            - name: plugins.coreModel.idType
              value: "{{ .Values.frost.plugins.coreModel.idType.basicType }}"
            - name: plugins.coreModel.editableDsProperties
              value: "{{ .Values.frost.plugins.coreModel.editableDsProperties }}"
              name: plugins.coreModel.idType.datastream
              value: "{{ .Values.frost.plugins.coreModel.idType.datastream }}"
            - name: plugins.coreModel.idType.feature
              value: "{{ .Values.frost.plugins.coreModel.idType.feature }}"
            - name: plugins.coreModel.idType.historicalLocation
              value: "{{ .Values.frost.plugins.coreModel.idType.historicalLocation }}"
            - name: plugins.coreModel.idType.location
              value: "{{ .Values.frost.plugins.coreModel.idType.location }}"
            - name: plugins.coreModel.idType.observedProperty
              value: "{{ .Values.frost.plugins.coreModel.idType.observedProperty }}"
            - name: plugins.coreModel.idType.observation
              value: "{{ .Values.frost.plugins.coreModel.idType.observation }}"
            - name: plugins.coreModel.idType.sensor
              value: "{{ .Values.frost.plugins.coreModel.idType.sensor }}"
            - name: plugins.coreModel.idType.thing
              value: "{{ .Values.frost.plugins.coreModel.idType.thing }}"
            {{- end }}

            #Actuation Plugin
            {{ if .Values.frost.plugins.coreModel.enabled -}}
            {{ if .Values.frost.plugins.actuation.enabled -}}
            - name: plugins.actuation.enable
              value: "{{ .Values.frost.plugins.actuation.enabled }}"
            - name: plugins.actuation.idType.actuator
              value: "{{ .Values.frost.plugins.actuation.actuator }}"
            - name: plugins.actuation.idType.task
              value: "{{ .Values.frost.plugins.actuation.task }}"
            - name: plugins.actuation.idType.taskingCapability
              value: "{{ .Values.frost.plugins.actuation.taskingCapability }}"
            {{- end }}
            {{- end }}

            #MultiDatastream Plugin
            {{ if .Values.frost.plugins.coreModel.enabled -}}
            {{ if .Values.frost.plugins.multiDatastream.enabled -}}
            - name: plugins.multiDatastream.enable
              value: "{{ .Values.frost.plugins.multiDatastream.enabled }}"
            - name: plugins.multiDatastream.idType.multiDatastream
              value: "{{ .Values.frost.plugins.multiDatastream.idType }}"
            {{- end }}
            {{- end }}

            {{ if .Values.frost.mqtt.enabled -}}
            # Messages bus related properties
            - name: bus_mqttBroker
              value: {{ printf "tcp://%s:1883" (include "frost-server.fullName" (merge (dict "tier" "bus") .)) | quote }}
            - name: bus_busImplementationClass
              value: "{{ .Values.frost.bus.implementationClass }}"
            - name: bus_topicName
              value: "{{ .Values.frost.bus.topicName }}"
            - name: bus_qosLevel
              value: "{{ .Values.frost.bus.qos }}"
            - name: bus_sendWorkerPoolSize
              value: "{{ .Values.frost.http.bus.sendWorkerPoolSize }}"
            - name: bus_sendQueueSize
              value: "{{ .Values.frost.http.bus.sendQueueSize }}"
            - name: bus_recvWorkerPoolSize
              value: "{{ .Values.frost.http.bus.recvWorkerPoolSize }}"
            - name: bus_recvQueueSize
              value: "{{ .Values.frost.http.bus.recvQueueSize }}"
            - name: bus_maxInFlight
              value: "{{ .Values.frost.http.bus.maxInFlight }}"
            {{ else }}
            - name: bus_busImplementationClass
              value: "de.fraunhofer.iosb.ilt.sta.messagebus.InternalMessageBus"
            {{- end }}

            
            # Persistence related properties
            {{ if .Values.frost.db.enabled -}}
              - name: persistence_db_url
              value: {{ printf "jdbc:postgresql://%s:5432/%s" (include "frost-server.fullName" (merge (dict "tier" "db") .)) .Values.frost.db.database | quote }}
            {{ else }}
            - name: persistence_db_url
              value: "{{ .Values.frost.db.url }}"
            {{- end }}
            - name: persistence_db_jndi_datasource
              value: ""
            - name: persistence_db_driver
              value: "{{ .Values.frost.db.driver }}"
            - name: persistence_persistenceManagerImplementationClass
              value: "{{ .Values.frost.db.implementationClass }}"
            - name: persistence_idGenerationMode
              value: "{{ .Values.frost.db.idGenerationMode }}"
            - name: persistence_autoUpdateDatabase
              value: "{{ .Values.frost.http.db.autoUpdate }}"
            - name: persistence_alwaysOrderbyId
              value: "{{ .Values.frost.http.db.alwaysOrderbyId }}"
            - name: persistence_db_conn_max
              value: "{{ .Values.frost.http.db.maximumConnection }}"
            - name: persistence_db_conn_idle_max
              value: "{{ .Values.frost.http.db.maximumIdleConnection }}"
            - name: persistence_db_conn_idle_min
              value: "{{ .Values.frost.http.db.maximumIdleConnection }}"
            - name: persistence_db_username
              valueFrom:
                secretKeyRef:
                  name: {{ include "frost-server.fullName" . }}
                  key: db.username
            - name: persistence_db_password
              valueFrom:
                secretKeyRef:
                  name: {{ include "frost-server.fullName" . }}
                  key: db.password


            - name: auth_provider
              value: "{{ .Values.frost.auth.provider }}"
            - name: auth_autoUpdateDatabase
              value: "{{ .Values.frost.auth.autoUpdateDatabase }}"
            - name: auth_db_driver
              value: "{{ .Values.frost.auth.dbDriver }}"
            {{ if .Values.frost.db.enabled -}}
            - name: auth_db_url
              value: {{ printf "jdbc:postgresql://%s:5432/%s" (include "frost-server.fullName" (merge (dict "tier" "db") .)) .Values.frost.db.database | quote }}
            {{ else }}
            - name: auth_db_url
              value: "{{ .Values.frost.auth.dburl }}"
            {{- end }}
            - name: auth_allowAnonymousRead
              value: "{{ .Values.frost.auth.allowAnonymousRead }}"
            - name: auth_db_username
              value: "{{ .Values.frost.auth.dbUser }}"
            - name: auth_db_password
              value: "{{ .Values.frost.auth.dbPassword }}"
            #- name: auth_role_read
            #  value: "{{ .Values.frost.auth.roleRead }}"
            #- name: auth_role_create
            #  value: "{{ .Values.frost.auth.roleCreate }}"
            #- name: auth_role_update
            #  value: "{{ .Values.frost.auth.roleUpdate }}"
            #- name: auth_role_delete
            #  value: "{{ .Values.frost.auth.roleDelete }}"
            #- name: auth_role_admin
            #  value: "{{ .Values.frost.auth.roleAdmin }}"
            #- name: auth_keycloakConfigUrl
            #  value: "{{ .Values.frost.auth.keycloakConfigUrl }}"
            #- name: auth_keycloakConfigSecret
            #  value: "{{ .Values.frost.auth.keycloakConfigSecret }}"


            
            
